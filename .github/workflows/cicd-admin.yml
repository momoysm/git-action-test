name: CI/CD Pipeline Admin

on:
  push:
    branches:
      - "feat/git-action-teset"

jobs:
  build:
    runs-on: ubuntu-latest #runs-on으로 변경 test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 도커 허브 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push admin
        uses: docker/build-push-action@v3
        with:
          context: ./sycls-admin-api
          file: ./sycls-admin-api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/sycls-admin-api:latest

  deploy-admin:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # sudo docker run -d --${{secrets.DOCKER_USERNAME}}/sycls-admin-api:latest
      # sudo docker image prune -a --force --filter "until=24h"
      - name: SSH to EC2 and deploy admin-api
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_ADMIN }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            CONTAINER_ID=$(sudo docker ps -q --filter "publish=8080-8080")
            if [ ! -z "$CONTAINER_ID" ]; then
              sudo docker stop $CONTAINER_ID
              sudo docker rm $CONTAINER_ID
            fi
            sudo docker pull --platform linux/amd64 ${{ secrets.DOCKER_USERNAME }}/sycls-admin-api:latest
            sudo docker run -d -p 8080:8080 \
              -e DOCKER_USERNAME=${{secrets.DOCKER_USERNAME}} \
              -e AWS_ACCESS_KEY=${{secrets.AWS_ACCESS_KEY}} \
              -e AWS_SECRET_KEY=${{secrets.AWS_SECRET_KEY}} \
              -e AWS_BASE_URL=${{secrets.AWS_BASE_URL}} \
              -e AWS_BUCKET_NAME=${{secrets.AWS_BUCKET_NAME}} \
              -e DEV_DB_PASSWORD='${{secrets.DEV_DB_PASSWORD}}' \
              -e DEV_DB_URL=${{secrets.DEV_DB_URL}} \
              -e DEV_DB_NAME=${{secrets.DEV_DB_NAME}} \
              -e DEV_DB_USER=${{secrets.DEV_DB_USER}} \
              -e JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}} \
              -e NAVER_EMAIL=${{secrets.NAVER_EMAIL}} \
              -e NAVER_EMAIL_PASSWORD=${{secrets.NAVER_EMAIL_PASSWORD}} \
              -e TOSS_CLIENT_KEY=${{secrets.TOSS_CLIENT_KEY}} \
              -e TOSS_SECRET_KEY=${{secrets.TOSS_SECRET_KEY}} \
              -e MAIL_HOST=${{secrets.MAIL_HOST}} \
              -e MAIL_PORT=${{secrets.MAIL_PORT}} \
              -e SERVER_PORT=8080 \
              ${{secrets.DOCKER_USERNAME}}/sycls-admin-api:latest
